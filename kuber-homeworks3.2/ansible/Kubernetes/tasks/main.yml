---
# tasks file for Kubernetes
    - name: Gathering Facts
      block:
        - name: Gathering Facts
          setup:
      rescue:
        - name: install python3
          shell: ./install_python3
          delegate_to: localhost

    - name: firewalld RedHat
      include_tasks: tasks/firewalld.yml
      when: ansible_os_family == 'RedHat'

    - name: Install and configure the necessary dependencies
      include_tasks: tasks/dependencies.yml

    - name: Prepare For Install Helm
      include_tasks: tasks/helm.yml
      when: inventory_hostname in groups['master']

    - name: Prepare For Install containerd
      include_tasks: tasks/containerd.yml

    - name: Prepare For Install Kubernetes components
      include_tasks: tasks/kube_repo.yml

    - name: Modify sysctl.conf  net.bridge.bridge-nf-call-iptables = 1
      become: true
      lineinfile:
        path: /etc/sysctl.conf
        line: net.bridge.bridge-nf-call-iptables = 1

    - name: Modify sysctl.conf  net.ipv4.ip_forward = 1
      become: true
      lineinfile:
        path: /etc/sysctl.conf
        line: net.ipv4.ip_forward = 1
    
    - name: Modify sysctl.conf  net.bridge.bridge-nf-call-ip6tables = 1
      become: true
      lineinfile:
        path: /etc/sysctl.conf
        line: net.bridge.bridge-nf-call-ip6tables = 1
    
    - name: Load overlay and netfilter modules
      modprobe:
        name: "{{ item }}"
      loop:
        - overlay
        - br_netfilter

    - name: Add overlay and br_netfilter modules to /etc/modules
      when: ansible_os_family == 'Debian'
      lineinfile:
        path: /etc/modules
        line: "{{ item }}"
        state: present
      with_items:
        - overlay
        - br_netfilter

    - name: Create empty modules.conf file
      when: ansible_os_family == 'RedHat'
      file:
        path: /etc/modules-load.d/modules.conf
        state: touch

    - name: Add overlay and br_netfilter modules to /etc/modules
      when: ansible_os_family == 'RedHat'
      lineinfile:
        path: /etc/modules-load.d/modules.conf
        line: "{{ item }}"
        state: present
      with_items:
        - overlay
        - br_netfilter

    - name: Write noswap systemd service config file
      template:
        src: files/noswap.service.j2
        dest: /etc/systemd/system/noswap.service
        owner: root
        group: root
        mode: 0644
      notify: Enable noswap service

    - name: Reload sysctl configurations
      command: sysctl --system

    - name: Download runc
      get_url:
        url: https://github.com/opencontainers/runc/releases/download/v1.1.7/runc.amd64
        dest: /tmp/runc.amd64

    - name: Install runc
      when: ansible_os_family == 'Debian'
      command: install -m 755 /tmp/runc.amd64 /usr/local/sbin/runc

    - name: Install runc
      when: ansible_os_family == 'RedHat'
      command: install -m 755 /tmp/runc.amd64 /bin/runc

    - name: Remove runc binary from /tmp
      file:
        path: /tmp/runc.amd64
        state: absent

    - name: Execute kubeadm init command
      command: kubeadm init --skip-phases=addon/kube-proxy
      when: inventory_hostname in groups['master']
      ignore_errors: true


    - name: Add KUBECONFIG to root's environment
      lineinfile:
        path: /root/.bashrc
        line: 'export KUBECONFIG=/etc/kubernetes/admin.conf'
        state: present
        create: true
        owner: root
        group: root
      when: inventory_hostname in groups['master']

    - name: Add worker node
      include_tasks: tasks/worker.yml

    - name: Add master Cilium CLI
      include_tasks: tasks/cilium_cli.yml
      when: inventory_hostname in groups['master']  

    - name: install hubble 
      include_tasks: tasks/hubble.yml
      when: inventory_hostname in groups['master']

    - name: install hubble 
      include_tasks: tasks/k9s.yml
      when: inventory_hostname in groups['master']

    - name: Копировать .bashrc в домашний каталог пользователя admin
      ansible.builtin.copy:
        src: files/bashrc
        dest: /root/.bashrc
        owner: root
        group: root
        mode: '0644'
      when: inventory_hostname in groups['master']

    - name: Cilium CLI install - cilium
      become: yes
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf
      command: "/usr/local/bin/cilium install"
      when: inventory_hostname in groups['master']

    # - name: Cilium CLI install - cilium
    #   become: yes
    #   command: "/usr/local/bin/cilium hubble enable"
    #   when: inventory_hostname in groups['master']

    

    # - name: Setup Helm repository
    #   community.kubernetes.helm_repository:
    #     name: cilium
    #     repo_url: https://helm.cilium.io/
    #   when: inventory_hostname in groups['master'] 

    # - name: Deploy Cilium release via Helm
    #   community.kubernetes.helm:
    #     kubeconfig: "{{ kube_config_path }}"
    #     name: cilium
    #     chart_ref: "cilium/cilium"
    #     chart_version: 1.13.0
    #     namespace: kube-system
    #     values:
    #       kubeProxyReplacement: strict
    #       k8sServiceHost: "{{ inventory_hostname }}"
    #       k8sServicePort: 6443
    #   when: inventory_hostname in groups['master']




...
